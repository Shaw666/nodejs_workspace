#!/bin/bash

echo "start netset"
param=$1
echo "====$1===="
param=${param//\-/\_}
param=${param//\:\"on\"/\:\"true\"}
param=${param//\:\"off\"/\:\"false\"}
param=${param//\:\"是\"/\:\"true\"}
param=${param//\:\"否\"/\:\"false\"}
echo $param | json -q .*/=
eval $(echo $param | json -q  .*/- )
echo "action=$action"
[ ! "$action" = "CONFIRM" ] && exit 0

eval $(netinfo | json -q .*/-old_ | sed '{/.*=/{s/-/_/g}}')

NEED_REBOOT=0

if_eth0_changed() {
    if [ "$net_eth0_dhcp" = "dhcp" ]; then
        return 1
    fi
    if [ "$net_active_cnt" = "1" ]; then
        [ ! "$old_net_route_default_gateway" = "$net_eth0_gateway" ] && echo "eth0 gateway changed" && NEED_REBOOT=1
    else
        echo  "$old_net_eth0_gateway   $net_eth0_gateway"
        [ ! "$old_net_eth0_gateway"              = "$net_eth0_gateway"              ] && echo "eth0 gateway changed" && NEED_REBOOT=1
        [ ! "$old_net_route_default_gateway"     = "$net_route_default_gateway"     ] && echo "default gateway changed" && NEED_REBOOT=1
        [ ! "$old_net_route_default_gateway_dev" = "$net_route_default_gateway_dev" ] && echo "default gateway dev changed" && NEED_REBOOT=1
    fi
    return 1
}
if_eth1_changed() {
    if [ "$net_eth1_dhcp" = "dhcp" ]; then
        return 1
    fi
    [ ! "$old_net_eth1_gateway" = "$net_eth1_gateway" ] && NEED_REBOOT=1 && return 1
    return 1
}
if_route_changed() {
    return 0
}
if_nameserver_changed() {
    old_net_nameserver=${old_net_nameserver//[\[\]\" ]/}
    net_nameserver=${net_nameserver//[\[\]\" ]/}
    [ ! "$old_net_nameserver" = "$net_nameserver" ] && return 1
    return 0
}


do_set_ethx() {
    echo "do_set_ethx : $1"
    iface=$1
    if_${iface}_changed
    ret=$?
    echo "ret = $ret"
    [ "$ret" = "0" ]  && echo "${iface} settings not changed" && return
    eval "net_active=\$net_${iface}_active"
    eval "net_dhcp=\$net_${iface}_dhcp"
    eval "net_ip=\$net_${iface}_ip"
    eval "net_mask=\$net_${iface}_mask"
    eval "net_gateway=\$net_${iface}_gateway"

    echo "net_active=$net_active"

    echo "${iface} settings changed"
    if [ ! "$net_active" = "true" ]; then
        ifconfig ${iface} down
        echo "#${iface} is down" > /etc/network/${iface}
        return 0
    fi
    echo "#${iface} is up" > /etc/network/${iface}
    echo "auto ${iface}" >> /etc/network/${iface}
    if [ "$net_dhcp" = "dhcp" ]; then
        echo "dhcp"
        echo "iface ${iface} inet dhcp"   >> /etc/network/${iface}
    else
        echo "iface ${iface} inet static" >> /etc/network/${iface}
        echo "address $net_ip"            >> /etc/network/${iface}
        echo "netmask $net_mask"          >> /etc/network/${iface}
        if [[ $net_active_cnt -eq 1 ]]; then
            echo "gateway $net_gateway" >> /etc/network/${iface}
        else
            echo "gateway $net_gateway"       >> /etc/network/${iface}
            if [ "$net_route_default_gateway_dev" = "${iface}" ]; then
                sed -i '/post-up route add default/d' /etc/network/${iface}
                echo "post-up route add default via $net_route_default_gateway dev ${iface}" >> /etc/network/${iface}
            fi
        fi
        ifconfig ${iface} $net_ip  netmask $net_mask
    fi
    ifconfig ${iface} up
}

do_set_eth0() {
    echo "do_set_eth0"
    if_eth0_changed
    ret=$?
    [ "$ret" = "0" ]  && echo "eth0 not changed" && return
    do_set_ethx eth0
}
do_set_eth1() {
    echo "do_set_eth1"
    if_eth1_changed
    ret=$?
    [ "$ret" = "0" ]  && echo "eth1 not changed" && return
    do_set_ethx eth1
}
do_set_nameserver() {
    echo "do_set_nameserver"
    if_nameserver_changed
    ret=$?
    [ "$ret" = "0" ]  && echo "nameserver not changed" && return
    echo "$net_nameserver" \
        | sed 's/,/\n/g' \
        | awk '{print "nameserver  " $0}' \
        > /etc/resolvconf/resolv.conf.d/base
    resolvconf -u
}


net_active_cnt=0
[ "$net_eth0_active" = "true" ] && net_active_cnt=$(expr $net_active_cnt + 1)
[ "$net_eth1_active" = "true" ] && net_active_cnt=$(expr $net_active_cnt + 1)
eth_cnt=$(box-net-stat | json .stat-if-cnt)
do_set_eth0
if [[ $eth_cnt -gt 1 ]]; then
    do_set_eth1
fi
ifdown -a
echo "ifup before"
kill $(pidof dhclient3)
ifup -a &
echo "ifup after"
