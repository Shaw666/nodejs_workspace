<!DOCTYPE html>
<html lang="en">
  {{> header}}
  <body>
    {{> page_header}}
    <div id="body-container">
      <div id="body-content">
        {{> nav}}
        <section class="page container">
          <form class="form-horizontal">
            <div class="container">
              <div class="row">
                <div id="server-settings-row" class="span10">
                  <fieldset>
                    <legend>线路设置(修改后需要重新登录)</legend><br/>
                    <div class="box  pattern-sandstone span10">
                      <div class="box-header">
                        <i class="icon-table"></i>
                        <h5>接警线路列表</h5>
                      </div>
                      <div class="box-content box-table">
                        <table class="table table-striped table-hover table-bordered tablesorter">
                          <thead>
                            <tr>
                              <th class="center span2"></th>
                              <th class="center span1">是否启用</th>
                              <th class="center span1">线号</th>
                              <th class="center span2">名称</th>
                              <th class="center span2">用户号前缀</th>
                              <th class="center span2">端口</th>
                              <th class="center span2">协议</th>
                            </tr>
                          </thead>
                          <tbody id="lines-list">
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </fieldset>
                </div>
                <div id="new-line-row" class="span10">
                  <fieldset>
                    <legend>增加/修改线路</legend><br/>
                    <div class="control-group ">
                      <label class="control-label">线号 </label>
                      <div class="controls">
                        <select id="new-number" class="span2">
                          <option value="1"> 1号线路 </option>
                          <option value="2"> 2号线路 </option>
                          <option value="3"> 3号线路 </option>
                          <option value="4"> 4号线路 </option>
                          <option value="5"> 5号线路 </option>
                          <option value="6"> 6号线路 </option>
                          <option value="7"> 7号线路 </option>
                          <option value="8"> 8号线路 </option>
                          <option value="9"> 9号线路 </option>
                        </select>
                      </div>
                    </div>
                    <div class="control-group ">
                      <label class="control-label">名称 </label>
                      <div class="controls">
                        <input id="new-name" class="span4" value="" autocomplete="false"/>
                      </div>
                    </div>
                    <div class="control-group ">
                      <label class="control-label">用户号前缀<BR>(留空或4位数字) </label>
                      <div class="controls">
                        <input id="new-prefix" class="span4" value="" autocomplete="false"/>
                      </div>
                    </div>
                    <div class="control-group ">
                      <label class="control-label">端口(2000-9999) </label>
                      <div class="controls">
                        <input id="new-port" class="span4" value="" autocomplete="false"/>
                      </div>
                    </div>
                    <div class="control-group ">
                      <label class="control-label">通信协议</label>
                      <div class="controls">
                        <select id="new-protocol" class="span2">
                          <option value="ipr-2"> ipr-2 </option>
                          <option value="ipr-1"> ipr-1 </option>
                        </select>
                      </div>
                    </div>
                    <div class="control-group ">
                      <div class="controls">
                        <button id="btn-add-child" class="center btn" name="add-child">
                          <span class="icon-plus"></span>增加线路
                        </button>
                        <button id="btn-edit-child" class="center btn" name="add-child">
                          <span class="icon-edit"></span>更新线路
                        </button>
                      </div>
                    </div>
                  </fieldset>
                </div>
              </div>
            </div>
          </form>
        </section>
      </div>
    </div>
    {{> footer}}
    <script src="../js/bootstrap/bootstrap-switch.js" type="text/javascript" ></script>
    <script type="text/javascript">
     $(function(){
         $.fn.bootstrapSwitch.defaults.size = 'small';
         $(".switch").bootstrapSwitch();

         $("form").submit(function(){
             //这里是要执行的代码
             event.preventDefault();
         });
         var credit = 0;
         var settings = {};
         $("#submit-confirm-button").click(function () {
             var s = JSON.stringify(settings);
             if (!confirm("确认保存?")) { return; };
             $.getJSON("/api/set-lines?data=" + s)
              .done(function (data) {
                  if (data.result == "OK") {
                      window.onbeforeunload = null;
                      alert("配置保存成功.");
                  } else {
                      alert("配置保存失败:" + JSON.stringify(data));
                      return false;
                  }
              })
              .fail(function(textStatus, jqXHR, error ) {
                  alert("数据保存失败, 请重新保存.");
              });
             return true;
         });
         function on_exit(e) {
             var e = e || window.event;
             // For IE and Firefox prior to version 4
             if (e) {
                 e.returnValue = '数据已修改';
             }
             // For Safari
             return '数据已修改';
         };
         var updating = false;
         function on_data_changed() {
             if (updating) { return; };
             window.onbeforeunload = on_exit;
         };
         function on_child_del() {
             var key = $(this).data().key;
             var part = settings[key];
             if (confirm("确定要删除线路:" + key + "(" + settings[key].name + ")" + "吗?")) {
                 delete settings[key];
                 $("#row-" + key).remove();
                 on_data_changed();
             };
             return false;
         }
         function on_child_edit() {
             var key = $(this).data().key;
             var line = settings[key];
             $("#new-number").val(key);
             $("#new-name").val(line.name);
             $("#new-prefix").val(line.prefix);
             $("#new-port").val(line.port);
             $("#new-protocol").val(line.protocol);
             return false;
         }

         function on_child_enabled_changed() {
             var data = $(this).data()
             var key = data.key;
             var line = settings[key];
             var new_value;
             if ($(this).attr("checked")) {
                 new_value = true
             } else {
                 new_value = false;
             }
             if (line.enabled != new_value) {
                 on_data_changed();
                 line.enabled = new_value;
                 $(".switch").bootstrapSwitch();
             }
         }
         function add_new_child() {
             var key      = $("#new-number").val().toString();
             var name     = $("#new-name").val();
             var prefix   = $("#new-prefix").val();
             var port     = $("#new-port").val().toString();
             var protocol = $("#new-protocol").val();
             if (!/^[0-9]$/.test(key)) {
                 alert(key + ": 线路号格式错误.")
                 $("#new-liine").focus();
                 return false;
             }
             if (!/^[0-9]{4}$/.test(port)) {
                 alert("端口号格式错误:" + port);
                 $("#new-port").focus();
                 return false;
             }
             if (prefix && !/^[0-9]{4}$/.test(prefix)) {
                 alert("用户号前缀格式错误:" + prefix);
                 $("#new-prefix").focus();
                 return false;
             }
             port = parseInt(port, 10);
             if (port < 2000 || port > 10000) {
                 alert(port + ": 端口号超出允许的范围")
                 $("#new-port").focus();
                 return false;
             }
             for (var line  in settings) {
                 if (!settings.hasOwnProperty(line)) { continue; };
                 if (settings[line].port === port) {
                 alert(port + ": 端口号重复")
                 $("#new-port").focus();
                 return false;
                 }
             }
             if (protocol !== 'ipr-1' && protocol !== 'ipr-2') {
                 alert(protocol + ": 未知的协议类型")
                 $("#new-protocol").focus();
                 return false;
             }
             if (settings[key]) {
                 alert(key + "线路已经存在.")
                 $("#new-line").focus();
                 return false;
             }
             on_data_changed();
             settings[key] = {
                 enabled : true,
                 name    : name,
                 prefix  : prefix,
                 port    : port,
                 protocol : protocol
             }
             append_child(key, settings[key]);
         }
         function edit_child() {
             var key      = $("#new-number").val().toString();
             if (!settings[key]) {
                 alert(key + "线路不存在.")
                 $("#new-line").focus();
                 return false;
             }
             var name     = $("#new-name").val();
             var prefix   = $("#new-prefix").val();
             var port     = $("#new-port").val().toString();
             var protocol = $("#new-protocol").val();
             if (!/^[0-9]$/.test(key)) {
                 alert(key + ": 线路号格式错误.")
                 $("#new-liine").focus();
                 return false;
             }
             if (!/^[0-9]{4}$/.test(port)) {
                 alert("端口号格式错误:" + port);
                 $("#new-port").focus();
                 return false;
             }
             if (prefix && !/^[0-9]{4}$/.test(prefix)) {
                 alert("用户号前缀格式错误:" + prefix);
                 $("#new-prefix").focus();
                 return false;
             }
             port = parseInt(port, 10);
             if (port < 2000 || port > 10000) {
                 alert(port + ": 端口号超出允许的范围")
                 $("#new-port").focus();
                 return false;
             }
             for (var line  in settings) {
                 if (!settings.hasOwnProperty(line)) { continue; };
                 if (line === key) { continue; };
                 if (settings[line].port === port) {
                 alert(port + ": 端口号重复")
                 $("#new-port").focus();
                 return false;
                 }
             }
             if (protocol !== 'ipr-1' && protocol !== 'ipr-2') {
                 alert(protocol + ": 未知的协议类型")
                 $("#new-protocol").focus();
                 return false;
             }
             on_data_changed();
             settings[key] = {
                 enabled : true,
                 name    : name,
                 prefix  : prefix,
                 port    : port,
                 protocol : protocol
             }
             update_child(key);
         }
         function update_child(key) {
             var line = settings[key];
             if (!line) { return; };
             $("#row-" + key + " #col-name").text(line.name);
             $("#row-" + key + " #col-prefix").text(line.prefix);
             $("#row-" + key + " #col-port").text(line.port);
             $("#row-" + key + " #col-protocol").text(line.protocol);
             
         }
         function append_child(key, line) {
             var list = $("#lines-list");
             var row = $("<tr>").attr("id", "row-" + key);
             var col = $("<td>")
                 .addClass("center")
                 .attr("id", "col-oper")
                 .appendTo(row);
             $("<button>")
                 .addClass("btn")
                 .append($("<span>").addClass("icon-remove"))
                 .click(on_child_del)
                 .data({key:key, line: line})
                 .appendTo(col);
             $("<button>")
                 .addClass("btn")
                 .append($("<span>").addClass("icon-edit"))
                 .click(on_child_edit)
                 .data({key:key, line: line})
                 .appendTo(col);
             col.appendTo(row);

             col = $("<td>").attr("id", "col-enabled")
                            .addClass("center").appendTo(row);


             var enabled = $("<input>")
                 .attr("type", "checkbox")
                 .addClass("switch")
                 .data({key:key, line: line})
                 .addClass("span4")
                 .on('switchChange.bootstrapSwitch',
                     on_child_enabled_changed)
             
             if (line.enabled) {
                 enabled.attr("checked", "true");
             }
             enabled.appendTo(col);


             $("<td>").attr("id", "col-key")
                      .addClass("center")
                      .append(key)
                      .appendTo(row);

             col = $("<td>").appendTo(row).attr("id", "col-name").append(line.name);
             col = $("<td>").appendTo(row).attr("id", "col-prefix").append(line.prefix);
             col = $("<td>").appendTo(row).attr("id", "col-port").append(line.port);
             col = $("<td>").appendTo(row).attr("id", "col-protocol").append(line.protocol);
             row.appendTo(list);
             $(".switch").bootstrapSwitch();
         };
         $("#btn-add-child").click(add_new_child);
         $("#btn-edit-child").click(edit_child);
         $.getJSON("/api/get-lines", function (json) {
             settings = json.lines;
	     credit  = json.credit;
             var list = $("#lines-list");
             list.empty();
             for (var key in settings) {
                 if (!settings.hasOwnProperty(key)) { continue; };
                 var line = settings[key];
                 append_child(key, line);
             }
	     var e = $("#new-number");
	     e.children().remove();
	     for (var i = 0; i < credit; i++) {
	         $("<option>").val(i + 1).text( (i + 1) + "号线路").appendTo(e);
	     }	 
             return;
         });
     });
    </script>
    
  </body>
</html>
